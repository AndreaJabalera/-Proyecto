# Instalar las librerías si no están instaladas
if(!require(dplyr)) install.packages("dplyr")
if(!require(tidyr)) install.packages("tidyr")

# Cargar las librerías
library(dplyr)
library(tidyr)

# Cargar el dataset mtcars
data(mtcars)

# Convertir mtcars en un dataframe (aunque ya lo es por defecto)
df <- as.data.frame(mtcars)

# Imprimir el dataframe original
print(df)
# Seleccionar las columnas mpg, cyl, hp y gear, y filtrar por cyl > 4
df_seleccionado <- df %>%
  select(mpg, cyl, hp, gear) %>%
  filter(cyl > 4)

# Imprimir el dataframe después de la selección y el filtrado
print(df_seleccionado)
# Ordenar por hp de forma descendente y renombrar columnas
df_ordenado <- df_seleccionado %>%
  arrange(desc(hp)) %>%
  rename(consumo = mpg, potencia = hp)

# Imprimir el dataframe después de la ordenación y renombrado
print(df_ordenado)
# Crear la columna eficiencia y calcular el consumo medio y potencia máxima por cilindro
df_agregado <- df_ordenado %>%
  mutate(eficiencia = consumo / potencia) %>%
  group_by(cyl) %>%
  summarise(consumo_medio = mean(consumo, na.rm = TRUE),
            potencia_maxima = max(potencia, na.rm = TRUE))

# Imprimir el dataframe después de la creación de nuevas columnas y agregación
print(df_agregado)
# Crear el segundo dataframe con información sobre gear y tipo_transmision
df_transmision <- data.frame(
  gear = c(3, 4, 5),
  tipo_transmision = c("Manual", "Automática", "Semiautomática")
)

# Realizar el left_join para añadir la columna tipo_transmision
df_unido <- left_join(df_ordenado, df_transmision, by = "gear")

# Imprimir el dataframe después de la unión
print(df_unido)
# Transformar a formato largo
df_largo <- df_unido %>%
  pivot_longer(cols = c(consumo, potencia, eficiencia), 
               names_to = "medida", 
               values_to = "valor")

# Imprimir el dataframe en formato largo
print(df_largo)

# Identificar duplicados y agrupar por las columnas clave (cyl, gear, tipo_transmision, medida)
df_largo_agregado <- df_largo %>%
  group_by(cyl, gear, tipo_transmision, medida) %>%
  summarise(valor_media = mean(valor, na.rm = TRUE)) %>%
  ungroup()

# Transformar de nuevo a formato ancho
df_ancho <- df_largo_agregado %>%
  pivot_wider(names_from = medida, values_from = valor_media)

# Imprimir el dataframe en formato ancho
print(df_ancho)
# Ya hemos imprimido los resultados después de cada operación
# Aquí puedes agregar más verificaciones si es necesario, como:
# print(df_seleccionado)
# print(df_ordenado)
# print(df_agregado)
# print(df_unido)
# print(df_largo)
# print(df_ancho)
