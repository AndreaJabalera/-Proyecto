# Cargar el dataset
mall_data <- read.csv("Mall_Customers.csv")

# Examinar las primeras filas
head(mall_data)
# Examinar dimensiones y estructura
dim(mall_data)
str(mall_data)
summary(mall_data)

# Renombrar las columnas para facilitar su manejo
colnames(mall_data) <- c("CustomerID", "Genre", "Age", "AnnualIncome", "SpendingScore")

# Convertir Genre en variable numérica: 1 para masculino, 0 para femenino
mall_data$Genre <- ifelse(mall_data$Genre == "Male", 1, 0)

# Normalizar las variables numéricas clave
mall_data_normalized <- mall_data
mall_data_normalized$AnnualIncome <- scale(mall_data$AnnualIncome)
mall_data_normalized$SpendingScore <- scale(mall_data$SpendingScore)
library(ggplot2)

# Histograma de la Edad
ggplot(mall_data, aes(x = Age)) +
  geom_histogram(binwidth = 5, fill = "skyblue", color = "black") +
  labs(title = "Distribución de Edad", x = "Edad", y = "Frecuencia")

# Diagrama de caja para la distribución de Ingresos Anuales
ggplot(mall_data, aes(x = "", y = AnnualIncome)) +
  geom_boxplot(fill = "lightgreen", color = "black") +
  labs(title = "Distribución de Ingreso Anual", y = "Ingreso Anual")
# Usamos la función k-means para diferentes valores de k (2 a 6)
tot_withinss <- numeric(6)
for (k in 2:6) {
  kmeans_model <- kmeans(mall_data_normalized[, c("AnnualIncome", "SpendingScore")], centers = k)
  tot_withinss[k-1] <- kmeans_model$tot.withinss
}

# Gráfico del codo
plot(2:6, tot_withinss, type = "b", pch = 19, xlab = "Número de Clústeres", ylab = "Suma de Cuadrados Intra-clúster")
# Entrenar el modelo K-Means con k = 5
kmeans_model <- kmeans(mall_data_normalized[, c("AnnualIncome", "SpendingScore")], centers = 5)

# Añadir los resultados de la segmentación al dataset
mall_data$ClusterKMeans <- kmeans_model$cluster
# Calcular la matriz de distancias
dist_matrix <- dist(mall_data_normalized[, c("AnnualIncome", "SpendingScore")], method = "euclidean")

# Aplicar clustering jerárquico con el método Ward
hclust_model <- hclust(dist_matrix, method = "ward.D")

# Graficar el dendrograma
plot(hclust_model, main = "Dendrograma de Clustering Jerárquico")
# Cortar el dendrograma en 5 clústeres
hclust_clusters <- cutree(hclust_model, k = 5)

# Añadir los resultados de la segmentación jerárquica al dataset
mall_data$ClusterHierarchical <- hclust_clusters
library(cluster)

# Evaluación para K-Means
silhouette_kmeans <- silhouette(kmeans_model$cluster, dist_matrix)

# Evaluación para Clustering Jerárquico
silhouette_hclust <- silhouette(hclust_clusters, dist_matrix)

# Promedio de la silueta para ambos modelos
mean(silhouette_kmeans[, 3])
mean(silhouette_hclust[, 3])
# Estadísticas descriptivas por clúster
aggregate(cbind(AnnualIncome, SpendingScore) ~ ClusterKMeans, data = mall_data, FUN = mean)
aggregate(cbind(AnnualIncome, SpendingScore) ~ ClusterHierarchical, data = mall_data, FUN = mean)
# Visualizar los clústeres de K-Means
ggplot(mall_data, aes(x = AnnualIncome, y = SpendingScore, color = factor(ClusterKMeans))) +
  geom_point() +
  labs(title = "Segmentación K-Means", color = "Clúster")

# Visualizar los clústeres del Clustering Jerárquico
ggplot(mall_data, aes(x = AnnualIncome, y = SpendingScore, color = factor(ClusterHierarchical))) +
  geom_point() +
  labs(title = "Segmentación Clustering Jerárquico", color = "Clúster")
# Guardar en un archivo R
saveRDS(mall_data, "Mall_Customers_Segmentation.Rds")
